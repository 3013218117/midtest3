{"<Triangle: java.lang.String getType(Triangle)>":{"TriangleTest : testIsosceles":[0,1,2,7,8,9,10,11,14,15],"TriangleTest : testRegular":[0,1,2,3,4,5,6,15],"TriangleTest : testScalene":[0,1,2,7,8,9,10,11,12,13,15],"TriangleTest : testIllegal":[0,15],"TriangleTest : testIsosceles3":[0,15],"TriangleTest : testIsosceles2":[0,1,2,3,4,7,14,15]},"<Triangle: boolean isTriangle(Triangle)>":{"TriangleTest : testIsosceles":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"TriangleTest : testRegular":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"TriangleTest : testScalene":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"TriangleTest : testIllegal":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,19],"TriangleTest : testIsosceles3":[0,1,2,3,4,5,6,7,8,19],"TriangleTest : testIsosceles2":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]},"<Triangle: long diffOfBorders(long,long)>":{"TriangleTest : testIsosceles":[0,3,4,0,1,2,4,0,3,4],"TriangleTest : testRegular":[0,3,4,0,3,4,0,3,4],"TriangleTest : testScalene":[0,3,4,0,3,4,0,1,2,4],"TriangleTest : testIllegal":[0,3,4,0,3,4],"TriangleTest : testIsosceles2":[0,3,4,0,3,4,0,1,2,4]},"<Triangle: void <init>(long,long,long)>":{"TriangleTest : testIsosceles":[0],"TriangleTest : testRegular":[0],"TriangleTest : testScalene":[0],"TriangleTest : testIllegal":[0],"TriangleTest : testIsosceles3":[0],"TriangleTest : testIsosceles2":[0]},"<Triangle: long[] getBorders()>":{"TriangleTest : testIllegal":[0]}}